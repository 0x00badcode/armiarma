version: "3.7" 

services:
        db:
                image: postgres:14.1-alpine
                restart: always
                environment:
                        - POSTGRES_USER=user
                        - POSTGRES_PASSWORD=password
                volumes: 
                        - type: bind
                          source: ./app-data/init-armiarma.sql
                          target: /docker-entrypoint-initdb.d/docker_postgres_init.sql
                        - ./app-data/postgresql_db:/var/lib/postgresql/data
                network_mode: 'host'

        
        prometheus:
                image: prom/prometheus:v2.36.2
                user: root
                volumes:
                        - ./app-data/prometheus_db:/prom-data
                        - type: bind
                          source: ./prometheus/
                          target: /etc/prometheus/

                command:
                        - '--config.file=/etc/prometheus/prometheus.yml'
                        - '--storage.tsdb.path=/prom-data'
                        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
                        - '--web.console.templates=/usr/share/prometheus/consoles'
                network_mode: 'host'
                restart: always

        grafana:
                build: './grafana'
                container_name: 'grafana'
                network_mode: 'host'
                environment:
                        - Datasource=Armiarma

        crawler:
                image: "armiarma:latest"
                build:
                        context: .
                        dockerfile: Dockerfile
                network_mode: 'host'
                command: |
                        eth2
                        --psql-endpoint="postgresql://user:password@localhost:5432/armiarmadb"
                        --fork-digest="0x4a26c58b"
                        --gossip-topic="beacon_block" 
                        --subnet="all"
                depends_on:
                        - "db"
                deploy:
                        restart_policy:
                                condition: on-failure
                                delay: 5s
